/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package epmc.udbm;

public class udbm_intJNI {
  public final static native void VarNamesAccessor_setClockName(long jarg1, VarNamesAccessor jarg1_, int jarg2, String jarg3);
  public final static native long new_VarNamesAccessor();
  public final static native void delete_VarNamesAccessor(long jarg1);
  public final static native long new_AtomConstraint(int jarg1, int jarg2, int jarg3, boolean jarg4);
  public final static native void delete_AtomConstraint(long jarg1);
  public final static native long new_IntClockValuation(int jarg1);
  public final static native void IntClockValuation_setClockValue(long jarg1, IntClockValuation jarg1_, int jarg2, int jarg3);
  public final static native void delete_IntClockValuation(long jarg1);
  public final static native long new_DoubleClockValuation(int jarg1);
  public final static native void DoubleClockValuation_setClockValue(long jarg1, DoubleClockValuation jarg1_, int jarg2, double jarg3);
  public final static native void delete_DoubleClockValuation(long jarg1);
  public final static native long new_IntVector(int jarg1);
  public final static native void IntVector_setElement(long jarg1, IntVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_IntVector(long jarg1);
  public final static native long new_Federation__SWIG_0(int jarg1);
  public final static native long new_Federation__SWIG_1(int jarg1, long jarg2, AtomConstraint jarg2_);
  public final static native long new_Federation__SWIG_2(long jarg1, Federation jarg1_);
  public final static native String Federation_toStr(long jarg1, Federation jarg1_, long jarg2, VarNamesAccessor jarg2_);
  public final static native long Federation_orOp(long jarg1, Federation jarg1_, long jarg2, Federation jarg2_);
  public final static native long Federation_andOp__SWIG_0(long jarg1, Federation jarg1_, long jarg2, Federation jarg2_);
  public final static native long Federation_andOp__SWIG_1(long jarg1, Federation jarg1_, long jarg2, AtomConstraint jarg2_);
  public final static native long Federation_addOp(long jarg1, Federation jarg1_, long jarg2, Federation jarg2_);
  public final static native long Federation_minusOp(long jarg1, Federation jarg1_, long jarg2, Federation jarg2_);
  public final static native void Federation_up(long jarg1, Federation jarg1_);
  public final static native void Federation_down(long jarg1, Federation jarg1_);
  public final static native void Federation_mergeReduce(long jarg1, Federation jarg1_, int jarg2, int jarg3);
  public final static native void Federation_freeClock(long jarg1, Federation jarg1_, int jarg2);
  public final static native boolean Federation_lt(long jarg1, Federation jarg1_, long jarg2, Federation jarg2_);
  public final static native boolean Federation_gt(long jarg1, Federation jarg1_, long jarg2, Federation jarg2_);
  public final static native boolean Federation_le(long jarg1, Federation jarg1_, long jarg2, Federation jarg2_);
  public final static native boolean Federation_ge(long jarg1, Federation jarg1_, long jarg2, Federation jarg2_);
  public final static native boolean Federation_eq(long jarg1, Federation jarg1_, long jarg2, Federation jarg2_);
  public final static native void Federation_setZero(long jarg1, Federation jarg1_);
  public final static native void Federation_predt(long jarg1, Federation jarg1_, long jarg2, Federation jarg2_);
  public final static native void Federation_intern(long jarg1, Federation jarg1_);
  public final static native void Federation_setInit(long jarg1, Federation jarg1_);
  public final static native void Federation_convexHull(long jarg1, Federation jarg1_);
  public final static native boolean Federation_containsIntValuation(long jarg1, Federation jarg1_, long jarg2, IntClockValuation jarg2_);
  public final static native boolean Federation_containsDoubleValuation(long jarg1, Federation jarg1_, long jarg2, DoubleClockValuation jarg2_);
  public final static native void Federation_myExtrapolateMaxBounds(long jarg1, Federation jarg1_, long jarg2, IntVector jarg2_);
  public final static native boolean Federation_hasZero(long jarg1, Federation jarg1_);
  public final static native void Federation_updateValue__SWIG_0(long jarg1, Federation jarg1_, int jarg2, int jarg3);
  public final static native int Federation_size(long jarg1, Federation jarg1_);
  public final static native int Federation_hash(long jarg1, Federation jarg1_);
  public final static native boolean Federation_isEmpty(long jarg1, Federation jarg1_);
  public final static native void Federation_updateValue__SWIG_1(long jarg1, Federation jarg1_, long jarg2, int jarg3);
  public final static native void Federation_updateClock(long jarg1, Federation jarg1_, long jarg2, long jarg3);
  public final static native void Federation_updateIncrement(long jarg1, Federation jarg1_, long jarg2, int jarg3);
  public final static native void Federation_update(long jarg1, Federation jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void delete_Federation(long jarg1);
}
